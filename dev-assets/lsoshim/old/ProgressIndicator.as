package  {		import flash.display.MovieClip;	import flash.net.SharedObject;	import flash.external.ExternalInterface;	import flash.events.MouseEvent;			public class ProgressIndicator extends MovieClip {		var lso:SharedObject;				public function ProgressIndicator() {			//animation.visible = false;			lso = SharedObject.getLocal("friends");			if (lso.data.date) ExternalInterface.call("confirmClear", "date created: " + lso.data.date.toString());			else ExternalInterface.call("confirmClear", "no LSO creation date");			ExternalInterface.addCallback("jsSetFriends", fromJavascriptSetFriends);			ExternalInterface.addCallback("jsGetFriends", fromJavascriptGetFriends);						ExternalInterface.addCallback("jsShowAnimation", showAnimation);			ExternalInterface.addCallback("jsHideAnimation", hideAnimation);			clearButton.addEventListener(MouseEvent.CLICK, onClearClick, false, 0, true);								}						private function hideAnimation(){			animation.visible = false;					}				private function showAnimation(){			animation.visible = true;					}								private function saveFriends(p_friends:Array, p_username:String = ""):void{			lso.data.friendsArray = p_friends;			lso.data.username = p_username;			lso.data.date = new Date();			lso.flush();		}				private function retrieveFriendsObj():Object{			var fArray:Array = [];			var userN:String = "";			var ageSeconds:Number = 0;			var now:Date = new Date();			if (lso.data.date) ageSeconds = Math.round((now.valueOf() - (lso.data.date as Date).valueOf())/1000);			ExternalInterface.call("confirmClear", "Data age in seconds " + ageSeconds);			if (lso.data.friendsArray) fArray = lso.data.friendsArray;			if (lso.data.username) userN = lso.data.username;			return {friends:fArray, username:userN};					}				private function fromJavascriptSetFriends(p_friends:Array, p_username:String = ""):Boolean{			var success:Boolean = false;			if (p_friends){				saveFriends(p_friends, p_username);				success = true;			}			return success;		}						private function fromJavascriptGetFriends():Object{			return retrieveFriendsObj();		}				private function onClearClick(evt:MouseEvent):void{			clearLSO();			ExternalInterface.call("confirmClear", "data cleared");		}				private function clearLSO():void{			lso.data.friendsArray = [];			lso.data.username = "";			lso.data.date = null;			lso.flush();		}			}}